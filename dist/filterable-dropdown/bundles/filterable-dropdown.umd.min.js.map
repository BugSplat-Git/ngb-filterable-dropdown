{"version":3,"sources":["ng://filterable-dropdown/lib/selection-type.ts","ng://filterable-dropdown/lib/filterable-dropdown.component.ts","ng://filterable-dropdown/lib/multi-select-pipe/multi-select-pipe.ts","ng://filterable-dropdown/lib/filterable-dropdown.module.ts"],"names":["SelectionType","FilterableDropdownComponent","changeDetector","this","faCheck","SELECT_ALL","SELECT_NONE","autoClose","items","disabled","allowMultiSelect","onItemsSelected","EventEmitter","onOpen","nextToggleState","searchForm","FormGroup","searchInput","FormControl","Object","defineProperty","prototype","searchInputValue","length","map","item","value","filteredItems","filter","selected","onSelectAll","forEach","resetFilterInput","emit","selectedItems","onSelectNone","onItemSelect","itemIndex","findIndex","onOpenChange","open","detectChanges","search","nativeElement","focus","onEnterKeyPressed","_this","indexOf","setValue","lowerCaseSearchInputValue","toLowerCase","controls","isSelected","values","Component","args","selector","template","ChangeDetectorRef","Input","Output","ViewChild","static","MultiSelectPipe","transform","val","ALL_ITEMS_STRING","MULTIPLE_ITEMS_STRING","Pipe","name","FilterableDropdownModule","NgModule","declarations","imports","FormsModule","ReactiveFormsModule","CommonModule","NgbModule","FontAwesomeModule","exports"],"mappings":"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","sourcesContent":["export enum SelectionType {\r\n    All = \"Select All\",\r\n    None = \"Select None\"\r\n}  ","import { Component, Input, Output, EventEmitter, ViewChild, ElementRef, ChangeDetectorRef } from '@angular/core';\nimport { AbstractControl, FormControl, FormGroup } from '@angular/forms';\nimport { SelectionType } from './selection-type';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { ValueConverter } from '@angular/compiler/src/render3/view/template';\n\nexport interface FilterableItem {\n  value: string,\n  selected: boolean,\n}\n\n@Component({\n  selector: 'bugsplat-filterable-dropdown',\n  templateUrl: './filterable-dropdown.component.html',\n  styleUrls: ['./filterable-dropdown.component.scss']\n})\nexport class FilterableDropdownComponent {\n\n  public faCheck = faCheck;\n  public readonly SELECT_ALL = SelectionType.All;\n  public readonly SELECT_NONE = SelectionType.None;\n\n\n  @Input() autoClose: boolean | \"outside\" | \"inside\" = \"outside\";\n  @Input() items: Array<FilterableItem> = [];\n  @Input() disabled: boolean = false;\n  @Input() allowMultiSelect: boolean = true;\n\n  @Output() onItemsSelected: EventEmitter<Array<string>> = new EventEmitter<Array<string>>();\n  @Output() onOpen: EventEmitter<void> = new EventEmitter<void>();\n\n  @ViewChild('search', { static: true }) search: ElementRef;\n  @ViewChild('dropdown', { static: true }) dropdown: ElementRef;\n\n  public get allowToggleSelectAll(): boolean {\n    return (this.allowMultiSelect && this.searchInputValue.length === 0);\n  }\n\n  public get dropdownItems(): Array<string> {\n    return this.items.map(item=> item.value);\n  }\n\n  public get noItemsToDisplay(): boolean {\n    return this.filteredItems.length === 0;\n  }\n\n  nextToggleState: SelectionType = this.SELECT_ALL;\n\n  searchForm = new FormGroup({\n    searchInput: new FormControl()\n  });\n\n  constructor(private changeDetector: ChangeDetectorRef) { }\n\n  get selectedItems(): Array<string> {\n    const selectedItems =  this.items.filter(item => item.selected === true);\n    return selectedItems.map(item => item.value);\n  }\n\n  onSelectAll(): void {\n    this.items.forEach(item => item.selected = true);\n    this.nextToggleState = this.SELECT_NONE;\n    this.resetFilterInput();\n    this.onItemsSelected.emit(this.selectedItems);\n  }\n\n  onSelectNone(): void {\n    this.items.forEach(item => item.selected = false);\n    this.nextToggleState = this.SELECT_ALL;\n    this.resetFilterInput();\n    this.onItemsSelected.emit(this.selectedItems);\n  }\n\n  onItemSelect(item: FilterableItem) {\n    const itemIndex = this.items.findIndex(value => value.value === item.value);\n    if (itemIndex !== -1) {\n      this.items[itemIndex].selected = !this.items[itemIndex].selected;\n      if (!this.allowMultiSelect) {\n        this.items.forEach(value => {\n          if (value.value != item.value) {\n            value.selected = false;\n          }\n        });\n      }\n      this.onItemsSelected.emit(this.selectedItems);\n    }\n    this.resetFilterInput();\n  }\n\n  onOpenChange(open): void {\n    if (open) {\n      this.changeDetector.detectChanges();\n      this.search.nativeElement.focus();\n      this.onOpen.emit();\n    }\n  }\n\n  onEnterKeyPressed(): void {\n    if (this.allowMultiSelect) {\n      this.filteredItems.forEach(item => {\n        const itemIndex = this.items.indexOf(item)\n        if (itemIndex != -1) {\n          this.items[itemIndex].selected = true;\n        }\n      });\n      this.onItemsSelected.emit(this.selectedItems);\n    } else {\n      if (this.filteredItems.length) {\n        this.onItemSelect(this.filteredItems[0]);\n      }\n    }\n\n    this.resetFilterInput();\n  }\n\n  private resetFilterInput(): void {\n    this.searchInput.setValue(\"\");\n  }\n\n  get filteredItems(): Array<FilterableItem> {\n    if (!this.items) {\n      return [];\n    }\n\n    const lowerCaseSearchInputValue = this.searchInputValue.toLowerCase();\n    return this.items\n      .filter(item => !!item)\n      .filter(item => item.value.toLowerCase().indexOf(lowerCaseSearchInputValue) !== -1);\n  }\n\n  get searchInput(): AbstractControl {\n    return this.searchForm.controls[\"searchInput\"];\n  }\n\n  get searchInputValue(): string {\n    return this.searchInput.value || \"\";\n  }\n\n  isSelected(item: FilterableItem): boolean {\n    if (this.selectedItems && this.selectedItems.length) {\n      const itemIndex = this.items.findIndex(values => values.value == item.value);\n      return this.items[itemIndex].selected;\n    } else {\n      return false;\n    }\n  }\n}","import { PipeTransform, Pipe } from \"@angular/core\";\r\nimport { FilterableItem } from '../filterable-dropdown.component';\r\n\r\n@Pipe({\r\n  name: 'multiSelect'\r\n})\r\nexport class MultiSelectPipe implements PipeTransform {\r\n\r\n  public static readonly ALL_ITEMS_STRING = \"All\";\r\n  public static readonly MULTIPLE_ITEMS_STRING = \"Multiple\";\r\n\r\n  transform(val: Array<string>): string {\r\n    if (val.length === 0) {\r\n      return MultiSelectPipe.ALL_ITEMS_STRING;\r\n    } else if (val.length === 1) {\r\n      return val[0];\r\n    } else {\r\n      return MultiSelectPipe.MULTIPLE_ITEMS_STRING;\r\n    }\r\n  }\r\n}","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FilterableDropdownComponent } from './filterable-dropdown.component';\nimport { MultiSelectPipe } from './multi-select-pipe/multi-select-pipe';\n\n\n\n\n@NgModule({\n  declarations: [FilterableDropdownComponent, MultiSelectPipe],\n  imports: [FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    NgbModule,\n    FontAwesomeModule\n  ],\n  exports: [FilterableDropdownComponent]\n})\nexport class FilterableDropdownModule { }\n"]}